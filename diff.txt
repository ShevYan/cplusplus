--- ssm_new/ssm.c	2014-04-14 10:07:33.329145264 +0800
+++ ssm3/ssm_old.c	2014-04-14 10:12:31.229141216 +0800
@@ -6,6 +6,7 @@
  */
 
 #include "ssm_inc.h"
+#include "ssm_net.h"
 
 #define	CONTROLLED_TEST
 #define GRACE_DEMO1_03_14
@@ -15,30 +16,25 @@
 
 #ifdef	GRACE_DEMO1_03_14
 
-int	usr_interrupt;
-int	usr_terminate;
-
-char	arg_file[]="/tmp/passing.arg";
+int usr_interrupt;
 
 void
 sig_handler(int signo)
 {
 	if (signo == SIGUSR1) {
 		usr_interrupt = 1;
-	}
-
-	if (signo == SIGUSR2) {
-		usr_terminate = 1;
+	} else if (signo == SIGPIPE) {
+		fprintf(stderr, "ignore sigpipe\n");
 	}
 }
 
 void
 test_wait_for_signal()
 {
-	fprintf(stdout, "\nwait for USER INPUT or TERMINATION signal ...\n");
+	fprintf(stdout, "\nwait for SIGUSR1 signal ...\n");
 
 #ifdef	WAIT_FOR_SIGNAL
-	while (!usr_interrupt && !usr_terminate) {
+	while (!usr_interrupt) {
 		sleep(1);
 	}
 #endif
@@ -78,6 +74,7 @@
 	return ret;
 }
 
+
 ssm_io_t *
 test_generate_io(int start)
 {
@@ -156,37 +153,6 @@
 }
 
 #ifdef	GRACE_DEMO1_03_14
-
-int
-test_read_arguments(char *datafile, int *ctnID)
-{
-	char	line [FILE_NAME_SIZE];
-	FILE	*fd;
-
-	fd = fopen(arg_file, "r");
-	if (fd == NULL) {
-		fprintf(stderr, "Failed to open %s.\n", arg_file);
-		return 1;
-	}
-
-	if (fgets(line, sizeof(line), fd) != NULL) {
-		sscanf(line, "%s", datafile);
-		fprintf(stdout, "test_datafile: %s\n", datafile);
-	}
-
-	if (fgets(line, sizeof(line), fd) != NULL) {
-		sscanf(line, "%d", ctnID);
-		fprintf(stdout, "test container ID: %d\n", *ctnID);
-	} else {
-		*ctnID = -1;
-		fprintf(stdout, "test container ID is not specifed\n");
-	}
-
-	fclose(fd);
-
-	return 0;
-}
-
 ssm_io_t *
 test_read_io_from_file(char *filename)
 {
@@ -273,13 +239,13 @@
 #endif
 
 int
-test_ssm_io(int ctn_idx, ssm_io_t *io, uint64_t seqno)
+test_ssm_io(int ctn_idx, ssm_io_t *io, uint64_t seqno, char *net_io_cxt)
 {
 	int		ret = 0;
 	char		filename[FILE_NAME_SIZE];
 	ssm_container_t	*ctn;
 
-	ret = ssm_ec_encode(io);
+	ret = ssm_ec_encode(io, net_io_cxt);
 	if (ret) {
 		goto out;
 	}
@@ -302,9 +268,11 @@
 	sprintf(filename, "bmap_%lu.before", seqno);
 	fprintf(stdout, "\ndumping bitmap(BEFORE I/O: %ld bits) to file "
 		"%s...\n\n", ctn->sc_space_bmap->sb_nbit, filename);
+	sprintf(net_io_cxt+strlen(net_io_cxt), "\ndumping bitmap(BEFORE I/O: %ld bits) to file "
+			"%s...\n\n", ctn->sc_space_bmap->sb_nbit, filename);
 	ssm_dump_container_bitmap(filename, ctn);
 
-	ret = ssm_submit_io(ctn, io);
+	ret = ssm_submit_io(ctn, io, net_io_cxt);
 	if (ret) {
 		goto out;
 	}
@@ -312,6 +280,8 @@
 	sprintf(filename, "bmap_%lu.after", seqno);
 	fprintf(stdout, "\ndumping bitmap(AFTER I/O: %ld bits) to file "
 		"%s...\n\n", ctn->sc_space_bmap->sb_nbit, filename);
+	sprintf(net_io_cxt+strlen(net_io_cxt), "\ndumping bitmap(AFTER I/O: %ld bits) to file "
+			"%s...\n\n", ctn->sc_space_bmap->sb_nbit, filename);
 	ssm_dump_container_bitmap(filename, ctn);
 
 #else
@@ -326,13 +296,36 @@
 	return ret;
 }
 
+void client_usage() {
+	fprintf(stderr, "charoncp3 <src_file> <des_file>\n");
+	fprintf(stderr, "charoncp3 <src_file> exit 	#exit server!\n");
+	exit(-1);
+}
+
 int
-main(int argc, char *argv[])
+main_2(int argc, char *argv[])
 {
-	int		ret = 0;
+	int		ret = -1;
+	char 	*net_io_cxt = (char *)malloc(128<<10);
 	ssm_io_t	*io;
-	char		datafile[FILE_NAME_SIZE];
-	int		ctnID = -1, seqno = 0;
+	int 	count = 0;
+
+
+	/* for charoncp*/
+	if (argc > 1) {
+		if (argc != 3) {
+			client_usage();
+		} else {
+			ssm_net_client_init();
+			ssm_charoncp(argv[1], argv[2]);
+			exit(0);
+		}
+	}
+
+	/* for server*/
+//	ssm_net_init();
+//	server_join(ssm_svr);
+	///////////////////////////////////////////////////////////
 
 	ret = ssm_config_dir();
 	if (ret != 0) {
@@ -368,48 +361,64 @@
 
 #ifdef	GRACE_DEMO1_03_14
 
-	unlink(arg_file);
-
 	if (signal(SIGUSR1, sig_handler) == SIG_ERR) {
 		fprintf(stderr, "Can't catch SIGUSR1.\n");
 		ret = 1;
 		goto out;
 	}
 
-	if (signal(SIGUSR2, sig_handler) == SIG_ERR) {
-		fprintf(stderr, "Can't catch SIGUSR2.\n");
-		ret = 1;
-		goto out;
-	}
+//	if (signal(SIGPIPE, sig_handler) == SIG_ERR) {
+//		fprintf(stderr, "Can't catch SIGPIPE.\n");
+//		ret = 1;
+//		goto out;
+//	}
+
+	ssm_net_init();
 
 	ssm_dump_container("./container.map", &ssm_ctn_tbl);
 
 	fflush(stdout);
 
-	while (1) {
-		test_wait_for_signal();
-
-		if (usr_terminate) {
-			break;
-		}
-
-		ret = test_read_arguments(datafile, &ctnID);
-		if (ret) {
-			fprintf(stderr, "Can't open datafile %s.\n", datafile);
-			goto out;
-		}
 
-		io = test_read_io_from_file(datafile);
+	while (true) {
+		test_wait_for_signal();
+		io = test_read_io_from_file(g_srcfile);
 		if (!io) {
 			ret = EIO;
 			goto out;
 		}
-		ret = test_ssm_io(ctnID, io, seqno);
-		seqno++;
-
+		memset(net_io_cxt, 0x00, 64<<10);
+		ret = test_ssm_io(count ? 5 : -1, io, 0, net_io_cxt);
+		resp_charon_io(ssm_svr, false, strlen(net_io_cxt)+1, net_io_cxt);
 		fflush(stdout);
+
+		count ++;
 	}
 
+//	test_wait_for_signal();
+//
+//	io = test_read_io_from_file(g_srcfile);
+//	if (!io) {
+//		ret = EIO;
+//		goto out;
+//	}
+//
+//	memset(net_io_cxt, 0x00, 64<<10);
+//	ret = test_ssm_io(5, io, 1, net_io_cxt);
+//	resp_charon_io(ssm_svr, false, strlen(net_io_cxt)+1, net_io_cxt);
+//	fflush(stdout);
+//	test_wait_for_signal();
+//
+//	io = test_read_io_from_file(g_srcfile);
+//	if (!io) {
+//		ret = EIO;
+//		goto out;
+//	}
+//	memset(net_io_cxt, 0x00, 64<<10);
+//	ret = test_ssm_io(5, io, 2, net_io_cxt);
+//	resp_charon_io(ssm_svr, false, strlen(net_io_cxt)+1, net_io_cxt);
+//	fflush(stdout);
+
 #else
 	io = test_generate_io(1);
 	ret = test_ssm_io(-1, io, 0);
@@ -422,5 +431,7 @@
 #endif
 
 out:
+	printf("Press any key to exit...\n");
+	getchar();
 	return ret;
 }
