# SlickEdit generated file.  Do not edit this file except in designated areas.
include ../../Configure
include Version   
# Make command to use for dependencies
MAKE=gmake
RM=rm
MKDIR=mkdir
#fixme hc
FULLVERSION =$(MVERSION).$(VERSION)
NAME= comutility
SONAME=lib$(NAME).so.$(FULLVERSION)
# -----Begin user-editable area-----

# -----End user-editable area-----

# If no configuration is specified, "Debug" will be used
ifndef CFG
CFG=Debug
endif

#
# Configuration: Debug
#
ifeq "$(CFG)" "Debug"
OUTDIR=Debug
#fixme hc
OUTFILE=$(OUTDIR)/$(SONAME)
OUTDIRFUL= $(PWD)/$(OUTDIR)
CFG_INC=
CFG_LIB=-lpthread -liconv -lLog -L/usr/local/lib 
CFG_OBJ=
COMMON_OBJ=$(OUTDIR)/ARCCORE.o $(OUTDIR)/c_socket.o \
	$(OUTDIR)/c_wait_for.o $(OUTDIR)/Config.o $(OUTDIR)/FileCore.o \
	$(OUTDIR)/FiMemMgrTool.o $(OUTDIR)/FiMsgThread.o \
	$(OUTDIR)/FiUtility.o $(OUTDIR)/GetIP.o $(OUTDIR)/log.o \
	$(OUTDIR)/Markup.o $(OUTDIR)/MemFile.o $(OUTDIR)/MfcTime.o \
	$(OUTDIR)/pipetransfer.o $(OUTDIR)/ProcessMsg.o $(OUTDIR)/RiffFile.o \
	$(OUTDIR)/SDAMSMsgConvertor.o $(OUTDIR)/ShareLock.o \
	$(OUTDIR)/sv_sem.o $(OUTDIR)/sv_shm.o $(OUTDIR)/TCPSocket.o \
	$(OUTDIR)/UDPSocket.o $(OUTDIR)/UDPSocketThread.o \
	$(OUTDIR)/WIN_SOCKET_DEF.o 
OBJ=$(COMMON_OBJ) $(CFG_OBJ)
ALL_OBJ=$(OUTDIR)/ARCCORE.o $(OUTDIR)/c_socket.o \
	$(OUTDIR)/c_wait_for.o $(OUTDIR)/Config.o $(OUTDIR)/FileCore.o \
	$(OUTDIR)/FiMemMgrTool.o $(OUTDIR)/FiMsgThread.o \
	$(OUTDIR)/FiUtility.o $(OUTDIR)/GetIP.o $(OUTDIR)/log.o \
	$(OUTDIR)/Markup.o $(OUTDIR)/MemFile.o $(OUTDIR)/MfcTime.o \
	$(OUTDIR)/pipetransfer.o $(OUTDIR)/ProcessMsg.o $(OUTDIR)/RiffFile.o \
	$(OUTDIR)/SDAMSMsgConvertor.o $(OUTDIR)/ShareLock.o \
	$(OUTDIR)/sv_sem.o $(OUTDIR)/sv_shm.o $(OUTDIR)/TCPSocket.o \
	$(OUTDIR)/UDPSocket.o $(OUTDIR)/UDPSocketThread.o \
	$(OUTDIR)/WIN_SOCKET_DEF.o -lpthread -liconv -lLog -L/usr/local/lib 

COMPILE=g++ -c  "-DFI_MAC" -g -fPIC -m32 -o "$(OUTDIR)/$(*F).o" $(CFG_INC) "$<"
LINK=g++  -g -shared -fPIC -m32 -o "$(OUTFILE)" $(ALL_OBJ)

# Pattern rules
$(OUTDIR)/%.o : %.cpp
	$(COMPILE)

# Build rules
all: publication

publication:$(OUTFILE)
	echo "start publication..."
	$(call PUBEXEC,$(SONAME),lib$(NAME).so,$(OUTDIRFUL),$(PUBDIR))
	echo "end publication..."

$(OUTFILE): $(OUTDIR)  $(OBJ)
	$(LINK)

$(OUTDIR):
	$(MKDIR) -p "$(OUTDIR)"

# Rebuild this project
rebuild: cleanall all

# Clean this project
clean:
	$(RM) -f $(OUTFILE)
	$(RM) -f $(OBJ)

# Clean this project and all dependencies
cleanall: clean
endif

#
# Configuration: Release
#
ifeq "$(CFG)" "Release"
OUTDIR=Release
OUTFILE=$(OUTDIR)/libcomutility.so
CFG_INC=
CFG_LIB=-lpthread -liconv -lLog -L/usr/local/lib 
CFG_OBJ=
COMMON_OBJ=$(OUTDIR)/ARCCORE.o $(OUTDIR)/c_socket.o \
	$(OUTDIR)/c_wait_for.o $(OUTDIR)/Config.o $(OUTDIR)/FileCore.o \
	$(OUTDIR)/FiMemMgrTool.o $(OUTDIR)/FiMsgThread.o \
	$(OUTDIR)/FiUtility.o $(OUTDIR)/GetIP.o $(OUTDIR)/log.o \
	$(OUTDIR)/Markup.o $(OUTDIR)/MemFile.o $(OUTDIR)/MfcTime.o \
	$(OUTDIR)/pipetransfer.o $(OUTDIR)/ProcessMsg.o $(OUTDIR)/RiffFile.o \
	$(OUTDIR)/SDAMSMsgConvertor.o $(OUTDIR)/ShareLock.o \
	$(OUTDIR)/sv_sem.o $(OUTDIR)/sv_shm.o $(OUTDIR)/TCPSocket.o \
	$(OUTDIR)/UDPSocket.o $(OUTDIR)/UDPSocketThread.o \
	$(OUTDIR)/WIN_SOCKET_DEF.o 
OBJ=$(COMMON_OBJ) $(CFG_OBJ)
ALL_OBJ=$(OUTDIR)/ARCCORE.o $(OUTDIR)/c_socket.o \
	$(OUTDIR)/c_wait_for.o $(OUTDIR)/Config.o $(OUTDIR)/FileCore.o \
	$(OUTDIR)/FiMemMgrTool.o $(OUTDIR)/FiMsgThread.o \
	$(OUTDIR)/FiUtility.o $(OUTDIR)/GetIP.o $(OUTDIR)/log.o \
	$(OUTDIR)/Markup.o $(OUTDIR)/MemFile.o $(OUTDIR)/MfcTime.o \
	$(OUTDIR)/pipetransfer.o $(OUTDIR)/ProcessMsg.o $(OUTDIR)/RiffFile.o \
	$(OUTDIR)/SDAMSMsgConvertor.o $(OUTDIR)/ShareLock.o \
	$(OUTDIR)/sv_sem.o $(OUTDIR)/sv_shm.o $(OUTDIR)/TCPSocket.o \
	$(OUTDIR)/UDPSocket.o $(OUTDIR)/UDPSocketThread.o \
	$(OUTDIR)/WIN_SOCKET_DEF.o -lpthread -liconv -lLog -L/usr/local/lib 

COMPILE=g++ -c  "-DFI_MAC" -fPIC -m32 -o "$(OUTDIR)/$(*F).o" $(CFG_INC) "$<"
LINK=g++  -shared -fPIC -m32 -o "$(OUTFILE)" $(ALL_OBJ)

# Pattern rules
$(OUTDIR)/%.o : %.cpp
	$(COMPILE)

# Build rules
all: $(OUTFILE)

$(OUTFILE): $(OUTDIR)  $(OBJ)
	$(LINK)
	-cp ./Debug/libcomutility.so /usr/local/lib

$(OUTDIR):
	$(MKDIR) -p "$(OUTDIR)"

# Rebuild this project
rebuild: cleanall all

# Clean this project
clean:
	$(RM) -f $(OUTFILE)
	$(RM) -f $(OBJ)

# Clean this project and all dependencies
cleanall: clean
endif
